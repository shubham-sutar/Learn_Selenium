{"name": "Mini Project of idrive360", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00D20ED3+27667]\n\t(No symbol) [0x00CB6BD4]\n\t(No symbol) [0x00BB1AFF]\n\t(No symbol) [0x00BF2BFE]\n\t(No symbol) [0x00BF2CDB]\n\t(No symbol) [0x00C2EC22]\n\t(No symbol) [0x00C13974]\n\t(No symbol) [0x00C2CAC7]\n\t(No symbol) [0x00C136C6]\n\t(No symbol) [0x00BE74D1]\n\t(No symbol) [0x00BE804D]\n\tGetHandleVerifier [0x00FD3D43+2857603]\n\tGetHandleVerifier [0x01027EAD+3202029]\n\tGetHandleVerifier [0x00DA46D4+566292]\n\tGetHandleVerifier [0x00DAB8CC+595468]\n\t(No symbol) [0x00CBF9C4]\n\t(No symbol) [0x00CBC6D8]\n\t(No symbol) [0x00CBC877]\n\t(No symbol) [0x00CAE76E]\n\tBaseThreadInitThunk [0x7623FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x779B80CE+286]\n\tRtlGetAppContainerNamedObjectPath [0x779B809E+238]", "trace": "@pytest.mark.positive\n    @allure.title(\"Mini Project of idrive360\")\n    @allure.description(\"Conduct testing and Generate Automation testing report\")\n    def test_mini_project():\n        driver = webdriver.Chrome()\n        driver.get(\"https://www.idrive360.com/enterprise/login\")\n        driver.maximize_window()\n    \n        # Enter the username, password\n        username_box = driver.find_element(By.XPATH, \"//input[@id='username']\")\n        username_box.send_keys(\"augtest_040823@idrive.com\")\n    \n        password_box = driver.find_element(By.XPATH, \"//input[@id='password']\")\n        password_box.send_keys(\"123456\")\n    \n        WebDriverWait(driver=driver, timeout=3).until(\n            EC.visibility_of_element_located((By.ID, 'frm-btn'))\n        )\n    \n        submit_btn = driver.find_element(By.XPATH, \"//button[@id='frm-btn']\")\n        submit_btn.click()\n    \n>       WebDriverWait(driver=driver, timeout=10).until(\n            EC.visibility_of_element_located((By.XPATH, \"//span[text()='Your free trial has expired']\"))\n        )\n\ntest_mini_project.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ad20e7946bbf3c8ff8b933be58faa546\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000024E5E6D8360>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00D20ED3+27667]\nE       \t(No symbol) [0x00CB6BD4]\nE       \t(No symbol) [0x00BB1AFF]\nE       \t(No symbol) [0x00BF2BFE]\nE       \t(No symbol) [0x00BF2CDB]\nE       \t(No symbol) [0x00C2EC22]\nE       \t(No symbol) [0x00C13974]\nE       \t(No symbol) [0x00C2CAC7]\nE       \t(No symbol) [0x00C136C6]\nE       \t(No symbol) [0x00BE74D1]\nE       \t(No symbol) [0x00BE804D]\nE       \tGetHandleVerifier [0x00FD3D43+2857603]\nE       \tGetHandleVerifier [0x01027EAD+3202029]\nE       \tGetHandleVerifier [0x00DA46D4+566292]\nE       \tGetHandleVerifier [0x00DAB8CC+595468]\nE       \t(No symbol) [0x00CBF9C4]\nE       \t(No symbol) [0x00CBC6D8]\nE       \t(No symbol) [0x00CBC877]\nE       \t(No symbol) [0x00CAE76E]\nE       \tBaseThreadInitThunk [0x7623FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x779B80CE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x779B809E+238]\n\n..\\Python3xAtbLearn\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Conduct testing and Generate Automation testing report", "attachments": [{"name": "log", "source": "9c0dd6c7-e340-450f-bda0-fc5eb9d5fcc1-attachment.txt", "type": "text/plain"}], "start": 1723879883921, "stop": 1723879908226, "uuid": "0d157c30-98f9-4404-a877-fe3681a15d62", "historyId": "feba4cc88fc961f0551907cedde44302", "testCaseId": "feba4cc88fc961f0551907cedde44302", "fullName": "test_mini_project#test_mini_project", "labels": [{"name": "tag", "value": "positive"}, {"name": "suite", "value": "test_mini_project"}, {"name": "host", "value": "DESKTOP-12LQ1FH"}, {"name": "thread", "value": "12416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mini_project"}]}